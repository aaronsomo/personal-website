{"version":3,"sources":["components/About.jsx","components/HomePage.jsx","components/App.jsx","index.js"],"names":["About","id","className","technologies","languages","map","technology","index","key","frameworksLibraries","databases","developerTools","HomePage","darkBackgroundModes","lightBackgroundModes","useState","Configs","backgroundType","plainBackgroundMode","appClass","setAppClass","devIntro","devDesc","backgroundMode","setBackgroundMode","backgroundIndex","setBackgroundIndex","bgStyle","setBgStyle","icons","checkIfNightModeEnabled","checkIfDayModeEnabled","useEffect","gradientColors","background","backgroundSize","backgroundImageUrl","style","onClick","length","icon","target","rel","href","url","image","App","props","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fad688c5.chunk.js","sourcesContent":["import React from 'react';\n// import meirl from '../../public/meirl2.jpg';\nimport technologies from '../utils/technologies.json';\n\nconst About = () => (\n  <div id=\"about\" className=\"about-container\">\n    <div className=\"bio\">\n      {/* <div className=\"picture-container\">\n        <img className=\"picture\" src={meirl} alt=\"img\"></img>\n      </div> */}\n      <div className=\"about-text\">\n        <div className=\"header\">About Me</div>\n        <div className=\"text\">\n          Welcome! I'm Aaron and I have a knack for building creative and\n          meaningful things, be it a bridge in Chicago or a web application on\n          the Internet. As a former Civil Engineer, I’ve worked with different\n          teams to utilize my creative nature in designing and managing many\n          projects, but they haven’t quite filled that void - that curiosity in\n          seeing an idea, solving issues, and having that idea realized.\n          <br></br>\n          <br></br> I enjoy solving problems that challenge my understanding, as\n          well as engaging myself in finding better solutions. With my\n          proficiency in front-end technologies using JavaScript, React, and\n          React-Native; experience in scaling back-end systems through\n          frameworks and libraries like Express and Node.js; as well as my\n          comfortability with both SQL and NoSQL databases, I believe I’m\n          equipped to be a strong asset in any engineering environment. I’d love\n          the opportunity to learn more about your challenges and have a\n          discussion about what I can do to help solve them.\n        </div>\n        <div className=\"paragraph\">Some technologies that I frequent...</div>\n        <div className=\"technologies-container\">\n          <div className=\"technologies\">\n            <div className=\"technologies-header\">Languages</div>\n            <div>\n              {technologies.languages.map((technology, index) => (\n                <div className=\"text\" key={index}>\n                  {technology}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"technologies\">\n            <div className=\"technologies-header\">Frameworks & Libraries</div>\n            <div>\n              {technologies.frameworksLibraries.map((technology, index) => (\n                <div className=\"text\" key={index}>\n                  {technology}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"technologies\">\n            <div className=\"technologies-header\">Databases</div>\n            <div>\n              {technologies.databases.map((technology, index) => (\n                <div className=\"text\" key={index}>\n                  {technology}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"technologies\">\n            <div className=\"technologies-header\">Developer Tools</div>\n            <div>\n              {technologies.developerTools.map((technology, index) => (\n                <div className=\"text\" key={index}>\n                  {technology}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React, { Component, useState, useEffect } from 'react';\nimport Typist from 'react-typist';\nimport Configs from '../configurations.json';\nimport About from './About.jsx';\nimport Applications from './Applications.jsx';\n\nconst HomePage = () => {\n  const darkBackgroundModes = [\n    'day',\n    'terminal',\n    'torquoise',\n    'alizarin',\n    'amythyst',\n    'carrot',\n    'peterriver',\n  ];\n\n  const lightBackgroundModes = [\n    'night',\n    'lightred',\n    'lightpurple',\n    'lightgreen',\n    'lightblue',\n    'lightyellow',\n  ];\n\n  const [darkBackground, setDarkBackground] = useState(darkBackgroundModes);\n  const [lightBackground, setLightBackground] = useState(lightBackgroundModes);\n  const [backgroundType, setBackgroundType] = useState(Configs.backgroundType);\n  const [appClass, setAppClass] = useState(Configs.plainBackgroundMode);\n  const [devIntro, setDevIntro] = useState(Configs.devIntro);\n  const [devDesc, setDevDesc] = useState(Configs.devDesc);\n  const [backgroundMode, setBackgroundMode] = useState('default');\n  const [backgroundIndex, setBackgroundIndex] = useState(0);\n  const [bgStyle, setBgStyle] = useState({});\n  const [icons, setIcons] = useState(Configs.icons);\n\n  const checkIfNightModeEnabled = () => {\n    return backgroundType === 'plain' && appClass === 'nightlight';\n  };\n\n  const checkIfDayModeEnabled = () => {\n    return backgroundType === 'plain' && appClass === 'daylight';\n  };\n\n  const checkIfGradientTypeEnabled = () => {\n    if (backgroundType === 'gradient') {\n      return true;\n    } else {\n      return false;\n    }\n    // return backgroundType === 'gradient';\n  };\n\n  const checkIfPlainTypeEnabled = () => {\n    if (backgroundType === 'plain') {\n      return true;\n    } else {\n      return false;\n    }\n    // return backgroundType === 'plain';\n  };\n\n  const checkIfImageTypeEnabled = () => {\n    if (backgroundType === 'image') {\n      return true;\n    } else {\n      return false;\n    }\n    // return backgroundType === 'image';\n  };\n\n  const prepareGradientStyleSheets = () => {\n    if (Configs.gradientColors) {\n      return {\n        background: 'linear-gradient(-45deg, ' + Configs.gradientColors + ')',\n        backgroundSize: '400% 400%',\n      };\n    } else {\n      return {\n        background:\n          'linear-gradient(-45deg, #EE7752, #E73C7E, #23A6D5, #23D5AB)',\n        backgroundSize: '400% 400%',\n      };\n    }\n  };\n\n  const prepareBackgroundImageStyle = () => {\n    if (Configs.backgroundImageUrl) {\n      return {\n        background:\n          'url(\"' +\n          Configs.backgroundImageUrl +\n          '\") no-repeat center center fixed',\n        backgroundSize: 'cover',\n      };\n    } else {\n      return {\n        background:\n          'url(\"/images/sample-background.jpg\") no-repeat center center fixed',\n        backgroundSize: 'cover',\n      };\n    }\n  };\n\n  const getDefaultModeBasedOnBackgroundType = () => {\n    if (checkIfNightModeEnabled()) {\n      return lightBackgroundModes[0];\n    } else if (checkIfDayModeEnabled()) {\n      return darkBackgroundModes[0];\n    }\n  };\n\n  const changeThemeMode = () => {\n    if (checkIfNightModeEnabled()) {\n      setAppClass('daylight');\n      setBackgroundIndex(0);\n      setBackgroundMode(darkBackgroundModes[0]);\n    } else if (checkIfDayModeEnabled()) {\n      setAppClass('nightlight');\n      setBackgroundIndex(0);\n      setBackgroundMode(lightBackgroundModes[0]);\n    }\n  };\n\n  const changeBackgroundBasedonMode = () => {\n    if (\n      checkIfNightModeEnabled() &&\n      backgroundIndex < lightBackgroundModes.length - 1\n    ) {\n      setBackgroundIndex(backgroundIndex + 1);\n      setBackgroundMode(lightBackgroundModes[backgroundIndex + 1]);\n    } else if (\n      checkIfDayModeEnabled() &&\n      backgroundIndex < darkBackgroundModes.length - 1\n    ) {\n      setBackgroundIndex(backgroundIndex + 1);\n      setBackgroundMode(darkBackgroundModes[backgroundIndex + 1]);\n    } else {\n      setBackgroundIndex(0);\n      setBackgroundMode(getDefaultModeBasedOnBackgroundType());\n    }\n  };\n\n  useEffect(() => {\n    if (checkIfPlainTypeEnabled()) {\n      return;\n    } else if (checkIfGradientTypeEnabled()) {\n      setAppClass('gradient');\n      setBgStyle(prepareGradientStyleSheets());\n    } else if (checkIfImageTypeEnabled()) {\n      setAppClass('full-bg-image');\n      setBgStyle(prepareBackgroundImageStyle());\n    }\n  });\n\n  return (\n    <div className={appClass} style={bgStyle}>\n      {/* // <div className=\"daylight\" style={bgStyle}> */}\n      <div className=\"change-mode\" onClick={changeThemeMode} />\n      <div className={backgroundMode} onClick={changeBackgroundBasedonMode}>\n        <main className=\"App-main\">\n          <h1 className=\"intro\">{devIntro}</h1>\n          <div className=\"tagline\">\n            <Typist>{devDesc}</Typist>\n          </div>\n          <div className=\"icons-social\">\n            {icons.map((icon, index) => (\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`${icon.url}`}\n                key={index}\n              >\n                <i className={`${icon.image}`} />\n              </a>\n            ))}\n          </div>\n        </main>\n        <div className=\"App-main\">\n          <About />\n          {/* <Applications /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport Typist from 'react-typist';\n// import '../App.css';\nimport Configs from '../configurations.json';\nimport HomePage from './HomePage.jsx';\nimport '../sass/main.scss';\n\nconst App = props => {\n  return (\n    <div>\n      <HomePage />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}